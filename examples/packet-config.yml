# Configuration file for tc-worker.Dockerfile
transforms:
  - env
  - secrets
  - packet
config:
  credentials:
    # Taskcluster credentials with scopes like:
    # - assume:project:taskcluster:worker-test-scopes
    # - secrets:get:project/taskcluster/taskcluster-worker/stateless-dns
    clientId:       {$env: TASKCLUSTER_CLIENT_ID}
    accessToken:    {$env: TASKCLUSTER_ACCESS_TOKEN}
  engine:           {$env: ENGINE}
  engines:
    native:
      createUser:     false
    qemu:
      limits:
        defaultThreads: 1
        maxCPUs:        2
        maxMemory:      4096
      network:
        subnets:      2
        hostRecords:
          - names:
              - $secret:  project/taskcluster/taskcluster-worker/kms
                key:      hostname
            ipv4:
              $secret:  project/taskcluster/taskcluster-worker/kms
              key:      address
        srvRecords:
          - service:    _VLMCS
            protocol:   _TCP
            target:
              $secret:  project/taskcluster/taskcluster-worker/kms
              key:      hostname
            port:       1688
            priority:   0
            weight:     0
        vpnConnections:
          - $secret:  project/taskcluster/taskcluster-worker/kms
            key:      vpnConfig
  minimumDiskSpace:   10000000  # 10 GB
  minimumMemory:      1000000   # 1 GB
  monitor:
    logLevel:       debug
    project:        {$env: PROJECT}
  plugins:
    disabled:       [reboot]
    interactive:    {}
    artifacts:      {}
    env:            {}
    livelog:        {}
    logprefix:      {}
    tcproxy:        {}
    maxruntime:
      maxRunTime:   '4 hours'
      perTaskLimit: 'allow'
    success:        {}
  temporaryFolder:  /mnt/tmp
  webHookServer:
    provider:       webhooktunnel
  worker:
    concurrency:          2
    minimumReclaimDelay:  30
    pollingInterval:      5
    reclaimOffset:        300
    provisionerId:        {$env: PROVISIONER_ID}
    workerType:           {$env: WORKER_TYPE}
    workerGroup:          {$env: WORKER_GROUP}
    workerId:             {$env: WORKER_ID}
