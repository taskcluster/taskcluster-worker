# The version is always required
version: 0
# Top level metadata is always required
metadata:
  name: "TaskCluster Worker Tests"
  description: "These tests should ensure that any new commits against taskcluster worker codebase are tested across all supported worker types in gekco."
  owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
  source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
tasks:


  ##########################################################
  ##################### linux 64 build #####################
  ##########################################################

  - provisionerId: "{{ taskcluster.docker.provisionerId }}"
    workerType: "{{ taskcluster.docker.workerType }}"
    metadata:
      name: "Build/test 64 bit taskcluster-worker on Debian GNU/Linux 8 (jessie)"
      description: "This builds the 64 bit linux version of taskcluster-worker"
      owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
      source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
    extra:
      github:
        # Events that will trigger this task
        events:
          - push
    scopes:
      - secrets:get:repo:github.com/taskcluster/taskcluster-worker
      - docker-worker:cache:taskcluster-worker-checkout-1
    payload:
      features:
        taskclusterProxy: true
      maxRunTime: 3600
      image: golang:1.10-stretch
      command:
        - /bin/bash
        - -vxec
        - |
          curl -s http://taskcluster/secrets/v1/secret/repo:github.com/taskcluster/taskcluster-worker | sed -n 's/.*"b64_encoded_credentials_script": "\(.*\)".*/\1/p' | base64 -d > env_private.sh
          source env_private.sh
          go get -v "github.com/kardianos/govendor"
          mkdir -p "${GOPATH}/src/github.com/taskcluster"
          cd "${GOPATH}/src/github.com/taskcluster"
          if [ ! -d taskcluster-worker/.git ]; then rm -rf taskcluster-worker; git clone '{{ event.head.repo.url }}' 'taskcluster-worker'; fi
          cd 'taskcluster-worker'
          git fetch --tags
          git checkout -f '{{ event.head.sha }}'
          git clean -d -f -e '/vendor/*' -x
          # sometimes `govendor sync` fails first time, so run again, if fails first time
          govendor sync || govendor sync
          make reinstall check
      artifacts:
        public/build/taskcluster-worker-linux-amd64:
          path: "/go/bin/taskcluster-worker"
          expires: "{{ '2 weeks' | $fromNow }}"
          type: file
      cache:
        taskcluster-worker-checkout-1: /go/src


  ##########################################################
  #################### Windows 2012 R2 #####################
  ##########################################################

  - provisionerId: aws-provisioner-v1
    workerType: win2012r2-cu
    metadata:
      name: "Build/test 64 bit taskcluster-worker on Windows 2012 R2"
      description: "This builds the 64 bit Windows version of taskcluster-worker"
      owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
      source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
    extra:
      github:
        # Events that will trigger this task
        events:
          - push
    scopes:
      - generic-worker:cache:taskcluster-worker-checkout-1
    payload:
      maxRunTime: 3600
      artifacts:
        - expires: "{{ '2 weeks' | $fromNow }}"
          type: file
          path: public/build/taskcluster-worker-windows-amd64.exe
      command:
        - 'set GOROOT=%CD%\go1.10\go'
        - 'set GOPATH=%CD%\gopath'
        - 'set PATH=%CD%\git\cmd;%GOPATH%\bin;%GOROOT%\bin;%PATH%'
        - 'mkdir public\build'
        - 'mklink public\build\taskcluster-worker-windows-amd64.exe "%GOPATH%\bin\taskcluster-worker.exe"'
        - 'go get -v github.com/kardianos/govendor'
        - 'if not exist "%GOPATH%\src\github.com\taskcluster" mkdir "%GOPATH%\src\github.com\taskcluster"'
        - 'cd "%GOPATH%\src\github.com\taskcluster"'
        - 'git config --global core.autocrlf false'
        - 'if not exist taskcluster-worker git clone {{ event.head.repo.url }} taskcluster-worker'
        - 'cd taskcluster-worker'
        - 'git fetch --tags'
        - 'git checkout -f {{ event.head.sha }}'
        - 'git clean -d -f -e /vendor/* -x'
        - ':: sometimes `govendor sync` fails first time, so run again, if fails first time'
        - 'govendor sync || govendor sync'
        - 'C:\taskcluster-worker-test-creds.cmd'
        - '"C:\mozilla-build\msys\bin\bash.exe" --login -c "cd ${GOPATH}/src/github.com/taskcluster/taskcluster-worker && make reinstall check"'
      mounts:
        - cacheName: taskcluster-worker-checkout-1
          directory: gopath/src
        - content:
            url: https://storage.googleapis.com/golang/go1.10.windows-amd64.zip
          directory: go1.10
          format: zip
        - content:
            url: https://github.com/git-for-windows/git/releases/download/v2.16.2.windows.1/MinGit-2.16.2-64-bit.zip
          directory: git
          format: zip


  ##########################################################
  #################### OS X 10.10 build ####################
  ##########################################################

  - provisionerId: pmoore-manual
    workerType: mac-os-x
    metadata:
      name: "Build/test 64 bit taskcluster-worker on Mac OS X 10.10"
      description: "This builds the 64 bit OS X version of taskcluster-worker"
      owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
      source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
    extra:
      github:
        # Events that will trigger this task
        events:
          - push
    scopes:
      - generic-worker:cache:taskcluster-worker-checkout-1
    payload:
      maxRunTime: 3600
      artifacts:
        - expires: "{{ '2 weeks' | $fromNow }}"
          type: file
          path: public/build/taskcluster-worker-darwin-amd64
      command:
        - - /bin/bash
          - -vxec
          - |
            export GOROOT="$(pwd)/go1.10/go"
            export GOPATH="$(pwd)/gopath"
            export PATH="${GOPATH}/bin:${GOROOT}/bin:${PATH}"
            source "${TASKCLUSTER_CREDS_BOOTSTRAP}"
            go get -v "github.com/kardianos/govendor"
            mkdir -p "${GOPATH}/src/github.com/taskcluster"
            cd "${GOPATH}/src/github.com/taskcluster"
            if [ ! -d taskcluster-worker/.git ]; then rm -rf taskcluster-worker; git clone '{{ event.head.repo.url }}' 'taskcluster-worker'; fi
            cd 'taskcluster-worker'
            git fetch --tags
            git checkout -f '{{ event.head.sha }}'
            git clean -d -f -e '/vendor/*' -x
            # sometimes `govendor sync` fails first time, so run again, if fails first time
            govendor sync || govendor sync
            make reinstall check
            cd ../../../../..
            mkdir -p public/build
            mv "${GOPATH}/bin/taskcluster-worker" public/build/taskcluster-worker-darwin-amd64
      mounts:
        - cacheName: taskcluster-worker-checkout-1
          directory: gopath/src
        - content:
            url: https://storage.googleapis.com/golang/go1.10.darwin-amd64.tar.gz
          directory: go1.10
          format: tar.gz


  ##########################################################
  ##################### Linux ARM build ####################
  ##########################################################

  - provisionerId: pmoore-manual
    workerType: raspberry-pi-3b
    metadata:
      name: "Build/test armv6l taskcluster-worker on Ubuntu 16.04 LTS (Raspberry Pi)"
      description: "This builds the armv6l linux version of taskcluster-worker"
      owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
      source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
    extra:
      github:
        # Events that will trigger this task
        events:
          - push
    scopes:
      - generic-worker:cache:taskcluster-worker-checkout
    payload:
      maxRunTime: 3600
      artifacts:
        - expires: "{{ '2 weeks' | $fromNow }}"
          type: file
          path: public/build/taskcluster-worker-linux-armv6l
      command:
        - - /bin/bash
          - -vxec
          - |
            export GOROOT="$(pwd)/go1.8/go"
            export GOPATH="$(pwd)/gopath"
            export PATH="${GOPATH}/bin:${GOROOT}/bin:${PATH}"
            export CGO_ENABLED=0
            source "${TASKCLUSTER_CREDS_BOOTSTRAP}"
            go get -v "github.com/kardianos/govendor"
            mkdir -p "${GOPATH}/src/github.com/taskcluster"
            cd "${GOPATH}/src/github.com/taskcluster"
            if [ ! -d taskcluster-worker/.git ]; then rm -rf taskcluster-worker; git clone '{{ event.head.repo.url }}' 'taskcluster-worker'; fi
            cd 'taskcluster-worker'
            git fetch --tags
            git checkout -f '{{ event.head.sha }}'
            git clean -d -f -e '/vendor/*' -x
            # sometimes `govendor sync` fails first time, so run again, if fails first time
            govendor sync || govendor sync
            make rebuild check
            cd ../../../../..
            mkdir -p public/build
            mv "${GOPATH}/bin/taskcluster-worker" public/build/taskcluster-worker-linux-armv6l
      mounts:
        - cacheName: taskcluster-worker-checkout
          directory: gopath/src
        - content:
            url: https://storage.googleapis.com/golang/go1.8.linux-armv6l.tar.gz
          directory: go1.8
          format: tar.gz

  ##########################################################
  #################### linux QEMU tests ####################
  ##########################################################

  - provisionerId:  test-dummy-provisioner
    workerType:     dummy-worker-packet
    metadata:
      name: "Test taskcluster-worker QEMU engine on QEMU engine"
      description: "Builds and tests tc-worker with QEMU engine..."
      owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
      source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
    extra:
      github:
        # Events that will trigger this task
        events:
          - push
    payload:
      image: 'https://s3-us-west-2.amazonaws.com/public-qemu-images/repository/github.com/taskcluster/taskcluster-worker/ubuntu-worker.tar.zst'
      command:
        - clone-and-exec.sh
        - make
        - tc-worker-env-tests
      maxRunTime: '30 min'
      env:
        REPOSITORY: '{{ event.head.repo.url }}'
        REVISION: '{{ event.head.sha }}'

  ##########################################################
  ##################### upload-docs #####################
  ##########################################################

  - provisionerId: "{{ taskcluster.docker.provisionerId }}"
    workerType: "{{ taskcluster.docker.workerType }}"
    metadata:
      name: "Upload docs for taskcluster-worker"
      description: "Builds the 64 bit linux version of taskcluster-worker, generates and uploads docs"
      owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
      source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
    extra:
      github:
        # Events that will trigger this task
        events:
          - push
        branches:
          - master
    scopes:
      - auth:aws-s3:read-write:taskcluster-raw-docs/taskcluster-worker/
      - docker-worker:cache:taskcluster-worker-checkout-1
    payload:
      features:
        taskclusterProxy: true
      maxRunTime: 3600
      image: golang:1.10-stretch
      command:
        - /bin/bash
        - -vxec
        - |
          go get -v "github.com/kardianos/govendor"
          mkdir -p "${GOPATH}/src/github.com/taskcluster"
          cd "${GOPATH}/src/github.com/taskcluster"
          if [ ! -d taskcluster-worker/.git ]; then rm -rf taskcluster-worker; git clone '{{ event.head.repo.url }}' 'taskcluster-worker'; fi
          cd 'taskcluster-worker'
          git fetch --tags
          git checkout -f '{{ event.head.sha }}'
          git clean -d -f -e '/vendor/*' -x
          # sometimes `govendor sync` fails first time, so run again, if fails first time
          govendor sync || govendor sync
          # build tc-worker
          make install
          # generate docs
          taskcluster-worker schema config -o docs/config-schema.json
          # install taskcluster-lib-docs
          apt-get update -y
          apt-get install -y nodejs npm
          npm install -g taskcluster-lib-docs@3.3.2
          # upload docs
          export DOCS_PROJECT=taskcluster-worker DOCS_TIER=workers DOCS_FOLDER=docs DOCS_README=README.md
          # Hack because we forgot to wrap with node binary in taskcluster-lib-docs
          # See: https://github.com/taskcluster/taskcluster-lib-docs/pull/26
          nodejs `which upload-project-docs`
      cache:
        taskcluster-worker-checkout-1: /go/src
